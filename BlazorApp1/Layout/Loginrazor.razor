@page "/login"
@layout NoLayout
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>
    /* Стили из регистрации (с небольшими изменениями) */
    :root {
        --primary-color: #6C63FF;
        --secondary-color: #5A52E0;
        --text-color: #2D3748;
        --light-gray: #F8F9FA;
        --border-color: #E2E8F0;
        --error-color: #E53E3E;
    }

    body {
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #BFB1C8;
        min-height: 100vh;
        position: relative;
        overflow-x: hidden;
    }

    .container {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        padding: 20px;
        box-sizing: border-box;
        max-width: 1200px;
        margin: 0 auto;
    }

    .logo-container {
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 10;
    }

    .logo {
        width: 120px;
        height: auto;
        transition: transform 0.3s ease;
    }

        .logo:hover {
            transform: scale(1.05);
        }

    .form-section {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-grow: 1;
        position: relative;
        z-index: 2;
        margin-top: 80px;
    }

    .form-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
        padding: 40px 30px;
        width: 100%;
        max-width: 500px;
        position: relative;
    }

    .form-title {
        text-align: center;
        color: var(--text-color);
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 10px;
        position: relative;
    }

        .form-title::after {
            content: '';
            display: block;
            width: 80px;
            height: 4px;
            background: var(--primary-color);
            margin: 15px auto;
            border-radius: 2px;
        }

    .form-subtitle {
        text-align: center;
        color: #5A5A72;
        font-size: 16px;
        line-height: 1.6;
        margin-bottom: 30px;
    }

    .divider {
        height: 1px;
        background: var(--border-color);
        margin: 25px 0;
        position: relative;
    }

    .divider-text {
        position: absolute;
        top: -10px;
        left: 50%;
        transform: translateX(-50%);
        background: white;
        padding: 0 15px;
        color: #4a5568;
        font-size: 14px;
        text-transform: uppercase;
    }

    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

    .input-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: var(--text-color);
        display: flex;
        align-items: center;
    }

    .required-star {
        margin-left: 4px;
        color: var(--error-color);
        font-size: 18px;
    }

    .input-container {
        position: relative;
    }

    .input-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--primary-color);
        font-size: 20px;
        z-index: 2;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .input-icon svg {
            width: 20px;
            height: 20px;
            stroke: currentColor;
        }

    .input-field {
        width: 100%;
        padding: 14px 14px 14px 50px;
        border: 2px solid var(--border-color);
        border-radius: 12px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: var(--light-gray);
        box-sizing: border-box;
    }

        .input-field:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 4px rgba(108, 99, 255, 0.2);
        }

    .validation-message {
        color: var(--error-color);
        font-size: 14px;
        margin-top: 5px;
        display: flex;
        align-items: center;
    }

    .submit-btn {
        background: linear-gradient(to right, #6C63FF, #5A52E0);
        color: white;
        border: none;
        padding: 16px;
        width: 100%;
        border-radius: 12px;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        margin-top: 20px;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(108, 99, 255, 0.3);
    }

        .submit-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(108, 99, 255, 0.4);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

    .login-link {
        text-align: center;
        margin-top: 25px;
        color: #5A5A72;
        font-size: 16px;
    }

        .login-link a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
            transition: all 0.2s;
        }

            .login-link a:hover {
                text-decoration: underline;
                color: #5A52E0;
            }

    .api-error {
        background-color: #FFF5F5;
        border: 2px solid #FECACA;
        color: var(--error-color);
        padding: 15px;
        border-radius: 12px;
        margin-top: 20px;
        text-align: center;
        font-size: 16px;
    }

    .password-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
        font-size: 14px;
    }

    .remember-me {
        display: flex;
        align-items: center;
    }

        .remember-me input {
            margin-right: 8px;
        }

    .forgot-password {
        color: var(--primary-color);
        text-decoration: none;
    }

        .forgot-password:hover {
            text-decoration: underline;
        }

    .decor-element {
        position: absolute;
        z-index: 1;
        pointer-events: none;
    }

    .decor-1 {
        width: 150px;
        height: 150px;
        top: 10%;
        right: 10%;
        background: rgba(108, 99, 255, 0.1);
        border-radius: 50%;
    }

    .decor-2 {
        width: 100px;
        height: 100px;
        bottom: 15%;
        left: 15%;
        background: rgba(108, 99, 255, 0.08);
        border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }

    @@media (min-width: 768px) {
        .container {
            padding: 40px;
        }

        .logo-container {
            top: 40px;
            left: 40px;
        }

        .logo {
            width: 140px;
        }

        .form-section {
            margin-top: 120px;
        }

        .form-container {
            padding: 50px 40px;
        }

        .form-title {
            font-size: 36px;
        }
    }

    @@media (min-width: 992px) {
        .form-section {
            margin-top: 0;
        }

        .form-container {
            max-width: 550px;
        }
    }
</style>

<div class="container">
    <!-- Логотип в левом углу -->
    <div class="logo-container">
        <img class="logo" src="/images/image1.png" alt="Логотип" />
    </div>

    <!-- Декоративные элементы -->
    <div class="decor-element decor-1"></div>
    <div class="decor-element decor-2"></div>

    <!-- Центральный блок с формой -->
    <div class="form-section">
        <div class="form-container">
            <h1 class="form-title">Вход в систему</h1>
            <p class="form-subtitle">Добро пожаловать обратно!<br>Пожалуйста, войдите в свой аккаунт</p>

            <EditForm Model="@loginModel" OnValidSubmit="@LoginUser" Context="formContext">
                <DataAnnotationsValidator />

                <!-- Email -->
                <div class="form-group">
                    <label class="input-label">
                        Email: <span class="required-star">*</span>
                    </label>
                    <div class="input-container">
                        <span class="input-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                                <polyline points="22,6 12,13 2,6"></polyline>
                            </svg>
                        </span>
                        <InputText @bind-Value="@loginModel.Email" class="input-field" placeholder="Введите ваш email" />
                    </div>
                    <ValidationMessage For="@(() => loginModel.Email)" class="validation-message" />
                </div>

                <!-- Пароль -->
                <div class="form-group">
                    <label class="input-label">
                        Пароль: <span class="required-star">*</span>
                    </label>
                    <div class="input-container">
                        <span class="input-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
                                <path d="M7 11V7a5 5 0 0 1 10 0v4"></path>
                            </svg>
                        </span>
                        <InputText type="password" @bind-Value="@loginModel.Password" class="input-field" placeholder="Введите ваш пароль" />
                    </div>
                    <ValidationMessage For="@(() => loginModel.Password)" class="validation-message" />
                </div>

                <!-- Дополнительные опции -->
                <div class="password-actions">
                    <label class="remember-me">
                        <input type="checkbox" @bind="loginModel.RememberMe" /> Запомнить меня
                    </label>
                    <a href="/forgot-password" class="forgot-password">Забыли пароль?</a>
                </div>

                <button type="submit" class="submit-btn">Войти</button>
            </EditForm>

            @if (!string.IsNullOrEmpty(apiErrorMessage))
            {
                <div class="api-error">@apiErrorMessage</div>
            }

            <div class="login-link">
                Ещё нет аккаунта? <a href="/register">Зарегистрироваться</a>
            </div>
        </div>
    </div>
</div>

@code {
    public class LoginModel
    {
        [Required(ErrorMessage = "Email обязателен")]
        [EmailAddress(ErrorMessage = "Некорректный формат email")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Пароль обязателен")]
        public string Password { get; set; }

        public bool RememberMe { get; set; }
    }

    private LoginModel loginModel = new();
    private string apiErrorMessage = "";

    private async Task LoginUser()
    {
        apiErrorMessage = "";

        try
        {
            var response = await Http.PostAsJsonAsync("api/User/login", new
            {
                Email = loginModel.Email, // PascalCase в запросе
                Password = loginModel.Password // PascalCase в запросе
            });

            if (response.IsSuccessStatusCode)
            {
                // Принудительная перезагрузка
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                apiErrorMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            apiErrorMessage = $"Ошибка подключения: {ex.Message}";
        }
    }
}